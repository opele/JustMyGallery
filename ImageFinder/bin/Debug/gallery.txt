Gallery Website Dev Notes




TODO:
- support category or tag filtering
- apply filter when pressing enter and input field is selected
- verify preview images are lazy loaded
- save filter/sort settings in local storage
- use minified js
- read img data from json file
- readme
	tags vs categories (see below)

	resources used: 
	Galleria: https://galleriajs.github.io/
	Bootstrap: https://getbootstrap.com/
	jQuery: https://jquery.com/
	images: https://unsplash.com/ and https://nasa.gov
	multiselect: https://developer.snapappointments.com/bootstrap-select/
	local storage consent banner: https://github.com/Wruczek/Bootstrap-Cookie-Alert
- add MIT license
- create github page: https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site


Requirements

must:
Image view:
- easy to close single image (popup on list view) by clicking on background
- when viewing image can navigate left or right to see next (navigateable with arrow keys or mouse click on arrow icon)
- fav image (shortcut for a tag)
List view:
- sort and filter according to: date, tags
- allow to combine tags with and/or logic
- auto load when scrolling down




nice to have:
- allow user to add tag images in addition to predefined tags
- categories (= grouping of tags?)
- two modes: small and medium preview image list view



ideas:
- generate previewes?
 should be server side because (initial) loading would be extremly slow if sending over original and caching icon locally
- use browser cache for storing custom tags

tags
	png does not support tags like jpeg
		parse tags.txt file format:   
			imageName1.jpeg:tag1,tag2
			imageName2.png:tag1,tag2,tag3
		must be placed in same directory as image
	alternative: categories can be derived from the folder structure the image is placed in
		easy to use, just need to move files into folders
		then only makes sense to filter for single category
		an image can have multiple categories if placed e.g. in nature > trees dir
		so u could filter for nature (broader category) or specifically for trees
		but falls short when also have category animals under nature and pic shows e.g. apes on a tree, should be in both categories: animals and trees
		solution is to combine tags with categories: instead of just an AND filter also allow for OR filter, so image appears when it is tagged with 'tree' or when category is animal for instance
			this way tags can be used for fine tuning categories, when an image belongs to multiple leaf categories
		by default, parent categories are turned off and only the dir is used as a category the image is directly placed in
		category suffix: allows to only create categories when the directory name ends with a specific suffix
			by default no suffix set, so if the image is placed in a subdirectory, its name is used as a category
			the suffix only marks the category and will not be part of the category name displayed for selection








resources:
https://colorlib.com/wp/template/shutter/

uses Licence: CC BY 3.0
https://creativecommons.org/licenses/by/3.0/
so just need to credit
claims it is free but can only buy it...


lazy loading images:
https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading#images_and_iframes
-> lazy is the default


templating:
https://www.codereadability.com/constructing-html-with-templates/


image grid with different sizes
same width on all images but optimised height allows for no gaps / whitespace:
https://www.w3schools.com/howto/howto_js_image_grid.asp
need support for allowing different heights for preview images
-> cant be used because requires fixed amount of images

alternative JS library:
https://github.com/galleriajs/galleria
demos:
https://galleria.foliofusion.com/
https://theshopkeepers.com/shopkeeper/galleria/themes/folio/demo.html

image grid js lib:
https://github.com/schlosser/pig.js
but horizontal flex with fixed height


border around images:
https://www.w3schools.com/howto/howto_css_border_image.asp




---
backup:
avoid main page header flashing when navigating between images:
Galleria.on('lightbox_open', function(e) {
			$("#galleryHeader").get(0).style.display = 'none';
		});
		
		Galleria.on('lightbox_close', function(e) {
			$("#galleryHeader").get(0).style.display = 'block';
		});







